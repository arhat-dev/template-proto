/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_TEMPLATE_BAR_PB_H_INCLUDED
#define PB_TEMPLATE_BAR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _template_Bar_B {
    template_Bar_B_E1 = 0,
    template_Bar_B_E2 = 1
} template_Bar_B;

/* Struct definitions */
typedef struct _template_Bar {
    template_Bar_B b;
} template_Bar;


/* Helper constants for enums */
#define _template_Bar_B_MIN template_Bar_B_E1
#define _template_Bar_B_MAX template_Bar_B_E2
#define _template_Bar_B_ARRAYSIZE ((template_Bar_B)(template_Bar_B_E2+1))


/* Initializer values for message structs */
#define template_Bar_init_default                {_template_Bar_B_MIN}
#define template_Bar_init_zero                   {_template_Bar_B_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define template_Bar_b_tag                       1

/* Struct field encoding specification for nanopb */
#define template_Bar_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    b,                 1)
#define template_Bar_CALLBACK NULL
#define template_Bar_DEFAULT NULL

extern const pb_msgdesc_t template_Bar_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define template_Bar_fields &template_Bar_msg

/* Maximum encoded size of messages (where known) */
#define template_Bar_size                        2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
